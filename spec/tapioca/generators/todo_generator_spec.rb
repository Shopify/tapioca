# typed: strict
# frozen_string_literal: true

require "generator_spec"
require "tapioca/generators/todo_generator"

module Tapioca
  module Generators
    class TodoGeneratorSpec < GeneratorSpec
      describe("TodoGenerator") do
        describe("#generate") do
          it "does nothing if all constants are already resolved" do
            generator = Tapioca::Generators::TodoGenerator.new(ConfigBuilder.from_options(:todo, {}))

            generator.generate

            refute_path_exists(repo_path / "sorbet/rbi/todo.rbi")
          end

          it "creates a list of all unresolved constants" do
            File.write("file.rb", <<~RUBY)
              class Foo < ::Undef1
                def foo
                  Undef2.new
                end
              end

              ::Undef1::Undef3.foo
              Undef2::Undef4.bar
            RUBY

            generator = Tapioca::Generators::TodoGenerator.new(ConfigBuilder.from_options(:todo, {}))

            generator.generate

            File.delete("file.rb")

            assert_path_exists("sorbet/rbi/todo.rbi")
            assert_equal(<<~RUBY, File.read("sorbet/rbi/todo.rbi"))
              # DO NOT EDIT MANUALLY
              # This is an autogenerated file for unresolved constants.
              # Please instead update this file by running `bin/tapioca todo`.

              # typed: false

              module ::Undef1; end
              module ::Undef1::Undef3; end
              module ::Undef2::Undef4; end
              module Foo::Undef2; end
            RUBY

            File.delete("sorbet/rbi/todo.rbi")
          end

          it "creates a TODO file without a header" do
            File.write("file.rb", <<~RUBY)
              class Foo < ::Undef1
                def foo
                  Undef2.new
                end
              end

              ::Undef1::Undef3.foo
              Undef2::Undef4.bar
            RUBY

            options = {
              "file_header" => false,
            }

            config = ConfigBuilder.from_options(:todo, options)

            generator = Tapioca::Generators::TodoGenerator.new(config)

            generator.generate

            File.delete("file.rb")

            assert_path_exists("sorbet/rbi/todo.rbi")
            assert_equal(<<~RUBY, File.read("sorbet/rbi/todo.rbi"))
              # typed: false

              module ::Undef1; end
              module ::Undef1::Undef3; end
              module ::Undef2::Undef4; end
              module Foo::Undef2; end
            RUBY

            File.delete("sorbet/rbi/todo.rbi")
          end

          it "deletes todo.rbi file when everything is resolved" do
            FileUtils.mkdir_p("sorbet/rbi")
            File.write("sorbet/rbi/todo.rbi", <<-RUBY)
              # DO NOT EDIT MANUALLY
              # This is an autogenerated file for unresolved constants.
              # Please instead update this file by running `bin/tapioca todo`.

              # typed: false

              module ::Undef1; end
              module ::Undef1::Undef2; end
              module ::Undef2::Undef4; end
              module Foo::Undef2; end
            RUBY

            generator = Tapioca::Generators::TodoGenerator.new(ConfigBuilder.from_options(:todo, {}))

            generator.generate

            refute_path_exists(repo_path / "sorbet/rbi/todo.rbi")
          end
        end
      end
    end
  end
end
