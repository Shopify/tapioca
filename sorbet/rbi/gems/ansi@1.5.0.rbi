# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `ansi` gem.
# Please instead update this file by running `tapioca generate`.

# typed: true

module ANSI
  extend(::ANSI::Constants)
  extend(::ANSI::Code)
end

ANSI::CHART = T.let(T.unsafe(nil), Hash)

module ANSI::Code
  include(::ANSI::Constants)
  extend(::ANSI::Code)

  def [](*codes); end
  def ansi(*codes); end
  def back(spaces = _); end
  def black_on_black(string = _); end
  def black_on_blue(string = _); end
  def black_on_cyan(string = _); end
  def black_on_green(string = _); end
  def black_on_magenta(string = _); end
  def black_on_red(string = _); end
  def black_on_white(string = _); end
  def black_on_yellow(string = _); end
  def blue_on_black(string = _); end
  def blue_on_blue(string = _); end
  def blue_on_cyan(string = _); end
  def blue_on_green(string = _); end
  def blue_on_magenta(string = _); end
  def blue_on_red(string = _); end
  def blue_on_white(string = _); end
  def blue_on_yellow(string = _); end
  def code(*codes); end
  def color(*codes); end
  def cyan_on_black(string = _); end
  def cyan_on_blue(string = _); end
  def cyan_on_cyan(string = _); end
  def cyan_on_green(string = _); end
  def cyan_on_magenta(string = _); end
  def cyan_on_red(string = _); end
  def cyan_on_white(string = _); end
  def cyan_on_yellow(string = _); end
  def display(line, column = _); end
  def down(spaces = _); end
  def forward(spaces = _); end
  def green_on_black(string = _); end
  def green_on_blue(string = _); end
  def green_on_cyan(string = _); end
  def green_on_green(string = _); end
  def green_on_magenta(string = _); end
  def green_on_red(string = _); end
  def green_on_white(string = _); end
  def green_on_yellow(string = _); end
  def hex_code(string, background = _); end
  def left(spaces = _); end
  def magenta_on_black(string = _); end
  def magenta_on_blue(string = _); end
  def magenta_on_cyan(string = _); end
  def magenta_on_green(string = _); end
  def magenta_on_magenta(string = _); end
  def magenta_on_red(string = _); end
  def magenta_on_white(string = _); end
  def magenta_on_yellow(string = _); end
  def method_missing(code, *args, &blk); end
  def move(line, column = _); end
  def random(background = _); end
  def red_on_black(string = _); end
  def red_on_blue(string = _); end
  def red_on_cyan(string = _); end
  def red_on_green(string = _); end
  def red_on_magenta(string = _); end
  def red_on_red(string = _); end
  def red_on_white(string = _); end
  def red_on_yellow(string = _); end
  def rgb(*args); end
  def rgb_256(r, g, b); end
  def rgb_code(red, green, blue, background = _); end
  def right(spaces = _); end
  def style(*codes); end
  def unansi(string = _); end
  def uncolor(string = _); end
  def unstyle(string = _); end
  def up(spaces = _); end
  def white_on_black(string = _); end
  def white_on_blue(string = _); end
  def white_on_cyan(string = _); end
  def white_on_green(string = _); end
  def white_on_magenta(string = _); end
  def white_on_red(string = _); end
  def white_on_white(string = _); end
  def white_on_yellow(string = _); end
  def yellow_on_black(string = _); end
  def yellow_on_blue(string = _); end
  def yellow_on_cyan(string = _); end
  def yellow_on_green(string = _); end
  def yellow_on_magenta(string = _); end
  def yellow_on_red(string = _); end
  def yellow_on_white(string = _); end
  def yellow_on_yellow(string = _); end

  class << self
    def colors; end
    def styles; end
  end
end

ANSI::Code::ENDCODE = T.let(T.unsafe(nil), String)

ANSI::Code::PATTERN = T.let(T.unsafe(nil), Regexp)

module ANSI::Constants
end

ANSI::Constants::BLACK = T.let(T.unsafe(nil), String)

ANSI::Constants::BLINK = T.let(T.unsafe(nil), String)

ANSI::Constants::BLINK_OFF = T.let(T.unsafe(nil), String)

ANSI::Constants::BLUE = T.let(T.unsafe(nil), String)

ANSI::Constants::BOLD = T.let(T.unsafe(nil), String)

ANSI::Constants::BOLD_OFF = T.let(T.unsafe(nil), String)

ANSI::Constants::BRIGHT = T.let(T.unsafe(nil), String)

ANSI::Constants::BRIGHT_OFF = T.let(T.unsafe(nil), String)

ANSI::Constants::CLEAN = T.let(T.unsafe(nil), String)

ANSI::Constants::CLEAR = T.let(T.unsafe(nil), String)

ANSI::Constants::CLEAR_EOL = T.let(T.unsafe(nil), String)

ANSI::Constants::CLEAR_LEFT = T.let(T.unsafe(nil), String)

ANSI::Constants::CLEAR_LINE = T.let(T.unsafe(nil), String)

ANSI::Constants::CLEAR_RIGHT = T.let(T.unsafe(nil), String)

ANSI::Constants::CLEAR_SCREEN = T.let(T.unsafe(nil), String)

ANSI::Constants::CLR = T.let(T.unsafe(nil), String)

ANSI::Constants::CLS = T.let(T.unsafe(nil), String)

ANSI::Constants::CONCEAL = T.let(T.unsafe(nil), String)

ANSI::Constants::CONCEALED = T.let(T.unsafe(nil), String)

ANSI::Constants::CONCEAL_OFF = T.let(T.unsafe(nil), String)

ANSI::Constants::CROSSED_OFF = T.let(T.unsafe(nil), String)

ANSI::Constants::CROSSED_OUT_OFF = T.let(T.unsafe(nil), String)

ANSI::Constants::CURSOR_HIDE = T.let(T.unsafe(nil), String)

ANSI::Constants::CURSOR_SHOW = T.let(T.unsafe(nil), String)

ANSI::Constants::CYAN = T.let(T.unsafe(nil), String)

ANSI::Constants::DARK = T.let(T.unsafe(nil), String)

ANSI::Constants::DEFAULT_FONT = T.let(T.unsafe(nil), String)

ANSI::Constants::DOUBLE_UNDERLINE = T.let(T.unsafe(nil), String)

ANSI::Constants::ENCIRCLE = T.let(T.unsafe(nil), String)

ANSI::Constants::ENCIRCLE_OFF = T.let(T.unsafe(nil), String)

ANSI::Constants::FAINT = T.let(T.unsafe(nil), String)

ANSI::Constants::FONT0 = T.let(T.unsafe(nil), String)

ANSI::Constants::FONT1 = T.let(T.unsafe(nil), String)

ANSI::Constants::FONT2 = T.let(T.unsafe(nil), String)

ANSI::Constants::FONT3 = T.let(T.unsafe(nil), String)

ANSI::Constants::FONT4 = T.let(T.unsafe(nil), String)

ANSI::Constants::FONT5 = T.let(T.unsafe(nil), String)

ANSI::Constants::FONT6 = T.let(T.unsafe(nil), String)

ANSI::Constants::FONT7 = T.let(T.unsafe(nil), String)

ANSI::Constants::FONT8 = T.let(T.unsafe(nil), String)

ANSI::Constants::FONT9 = T.let(T.unsafe(nil), String)

ANSI::Constants::FONT_DEFAULT = T.let(T.unsafe(nil), String)

ANSI::Constants::FRAKTUR = T.let(T.unsafe(nil), String)

ANSI::Constants::FRAKTUR_OFF = T.let(T.unsafe(nil), String)

ANSI::Constants::FRAME = T.let(T.unsafe(nil), String)

ANSI::Constants::FRAME_OFF = T.let(T.unsafe(nil), String)

ANSI::Constants::GREEN = T.let(T.unsafe(nil), String)

ANSI::Constants::HIDE = T.let(T.unsafe(nil), String)

ANSI::Constants::INVERSE = T.let(T.unsafe(nil), String)

ANSI::Constants::INVERSE_OFF = T.let(T.unsafe(nil), String)

ANSI::Constants::INVERT = T.let(T.unsafe(nil), String)

ANSI::Constants::ITALIC = T.let(T.unsafe(nil), String)

ANSI::Constants::ITALIC_OFF = T.let(T.unsafe(nil), String)

ANSI::Constants::MAGENTA = T.let(T.unsafe(nil), String)

ANSI::Constants::NEGATIVE = T.let(T.unsafe(nil), String)

ANSI::Constants::ON_BLACK = T.let(T.unsafe(nil), String)

ANSI::Constants::ON_BLUE = T.let(T.unsafe(nil), String)

ANSI::Constants::ON_CYAN = T.let(T.unsafe(nil), String)

ANSI::Constants::ON_GREEN = T.let(T.unsafe(nil), String)

ANSI::Constants::ON_MAGENTA = T.let(T.unsafe(nil), String)

ANSI::Constants::ON_RED = T.let(T.unsafe(nil), String)

ANSI::Constants::ON_WHITE = T.let(T.unsafe(nil), String)

ANSI::Constants::ON_YELLOW = T.let(T.unsafe(nil), String)

ANSI::Constants::OVERLINE = T.let(T.unsafe(nil), String)

ANSI::Constants::OVERLINE_OFF = T.let(T.unsafe(nil), String)

ANSI::Constants::POSITIVE = T.let(T.unsafe(nil), String)

ANSI::Constants::RAPID = T.let(T.unsafe(nil), String)

ANSI::Constants::RAPID_BLINK = T.let(T.unsafe(nil), String)

ANSI::Constants::RED = T.let(T.unsafe(nil), String)

ANSI::Constants::RESET = T.let(T.unsafe(nil), String)

ANSI::Constants::RESTORE = T.let(T.unsafe(nil), String)

ANSI::Constants::REVEAL = T.let(T.unsafe(nil), String)

ANSI::Constants::REVERSE = T.let(T.unsafe(nil), String)

ANSI::Constants::SAVE = T.let(T.unsafe(nil), String)

ANSI::Constants::SHOW = T.let(T.unsafe(nil), String)

ANSI::Constants::SLOW_BLINK = T.let(T.unsafe(nil), String)

ANSI::Constants::STRIKE = T.let(T.unsafe(nil), String)

ANSI::Constants::SWAP = T.let(T.unsafe(nil), String)

ANSI::Constants::UNDERLINE = T.let(T.unsafe(nil), String)

ANSI::Constants::UNDERLINE_OFF = T.let(T.unsafe(nil), String)

ANSI::Constants::UNDERSCORE = T.let(T.unsafe(nil), String)

ANSI::Constants::WHITE = T.let(T.unsafe(nil), String)

ANSI::Constants::YELLOW = T.let(T.unsafe(nil), String)

ANSI::SPECIAL_CHART = T.let(T.unsafe(nil), Hash)
