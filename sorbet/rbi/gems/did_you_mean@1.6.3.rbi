# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `did_you_mean` gem.
# Please instead update this file by running `bin/tapioca gem did_you_mean`.

class DidYouMean::DeprecatedMapping
  # source://did_you_mean//did_you_mean.rb#118
  def []=(key, value); end

  # source://did_you_mean//did_you_mean.rb#125
  def merge!(hash); end
end

class DidYouMean::KeyErrorChecker
  # source://did_you_mean//did_you_mean/spell_checkers/key_error_checker.rb#5
  def initialize(key_error); end

  # source://did_you_mean//did_you_mean/spell_checkers/key_error_checker.rb#10
  def corrections; end

  private

  # source://did_you_mean//did_you_mean/spell_checkers/key_error_checker.rb#16
  def exact_matches; end
end

# source://did_you_mean//did_you_mean/spell_checkers/method_name_checker.rb#21
DidYouMean::MethodNameChecker::RB_RESERVED_WORDS = T.let(T.unsafe(nil), Array)

class DidYouMean::PatternKeyNameChecker
  # source://did_you_mean//did_you_mean/spell_checkers/pattern_key_name_checker.rb#5
  def initialize(no_matching_pattern_key_error); end

  # source://did_you_mean//did_you_mean/spell_checkers/pattern_key_name_checker.rb#10
  def corrections; end

  private

  # source://did_you_mean//did_you_mean/spell_checkers/pattern_key_name_checker.rb#16
  def exact_matches; end
end

# source://did_you_mean//did_you_mean/formatter.rb#41
DidYouMean::PlainFormatter = DidYouMean::Formatter

class DidYouMean::RequirePathChecker
  # source://did_you_mean//did_you_mean/spell_checkers/require_path_checker.rb#25
  def initialize(exception); end

  # source://did_you_mean//did_you_mean/spell_checkers/require_path_checker.rb#29
  def corrections; end

  # source://did_you_mean//did_you_mean/spell_checkers/require_path_checker.rb#9
  def path; end

  class << self
    # source://did_you_mean//did_you_mean/spell_checkers/require_path_checker.rb#19
    def requireables; end
  end
end

# source://did_you_mean//did_you_mean/spell_checkers/require_path_checker.rb#14
DidYouMean::RequirePathChecker::ENV_SPECIFIC_EXT = T.let(T.unsafe(nil), String)

# source://did_you_mean//did_you_mean/spell_checkers/require_path_checker.rb#11
DidYouMean::RequirePathChecker::INITIAL_LOAD_PATH = T.let(T.unsafe(nil), Array)

class DidYouMean::TreeSpellChecker
  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#9
  def initialize(dictionary:, separator: T.unsafe(nil), augment: T.unsafe(nil)); end

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#7
  def augment; end

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#15
  def correct(input); end

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#7
  def dictionary; end

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#25
  def dictionary_without_leaves; end

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#33
  def dimensions; end

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#39
  def find_leaves(path); end

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#47
  def plausible_dimensions(input); end

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#54
  def possible_paths(states); end

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#7
  def separator; end

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#29
  def tree_depth; end

  private

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#93
  def correct_element(names, element); end

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#68
  def fall_back_to_normal_spell_check(input); end

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#74
  def find_ideas(paths, leaf); end

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#60
  def find_suggestions(input, plausibles); end

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#83
  def ideas_to_paths(ideas, leaf, names, path); end

  # source://did_you_mean//did_you_mean/tree_spell_checker.rb#103
  def normalize(str); end
end

# source://did_you_mean//did_you_mean/spell_checkers/name_error_checkers/variable_name_checker.rb#26
DidYouMean::VariableNameChecker::RB_RESERVED_WORDS = T.let(T.unsafe(nil), Array)
