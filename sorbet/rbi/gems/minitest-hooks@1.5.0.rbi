# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `minitest-hooks` gem.
# Please instead update this file by running `bin/tapioca gem minitest-hooks`.

# source://minitest-hooks-1.5.0/lib/minitest/hooks/test.rb:5
module Minitest::Hooks
  mixes_in_class_methods ::Minitest::Hooks::ClassMethods

  # source://minitest-hooks-1.5.0/lib/minitest/hooks/test.rb:21
  def after_all; end

  # source://minitest-hooks-1.5.0/lib/minitest/hooks/test.rb:30
  def around; end

  # source://minitest-hooks-1.5.0/lib/minitest/hooks/test.rb:25
  def around_all; end

  # source://minitest-hooks-1.5.0/lib/minitest/hooks/test.rb:17
  def before_all; end

  # source://minitest-hooks-1.5.0/lib/minitest/hooks/test.rb:35
  def time_it; end

  class << self
    # source://minitest-hooks-1.5.0/lib/minitest/hooks/test.rb:9
    def included(mod); end
  end
end

# source://minitest-hooks-1.5.0/lib/minitest/hooks/test.rb:44
module Minitest::Hooks::ClassMethods
  # source://minitest-hooks-1.5.0/lib/minitest/hooks/test.rb:123
  def after(type = T.unsafe(nil), &block); end

  # source://minitest-hooks-1.5.0/lib/minitest/hooks/test.rb:104
  def around(type = T.unsafe(nil), &block); end

  # source://minitest-hooks-1.5.0/lib/minitest/hooks/test.rb:110
  def before(type = T.unsafe(nil), &block); end

  # source://minitest-hooks-1.5.0/lib/minitest/hooks/test.rb:50
  def new(name); end

  # source://minitest-hooks-1.5.0/lib/minitest/hooks/test.rb:64
  def with_info_handler(reporter, &block); end

  private

  # source://minitest-hooks-1.5.0/lib/minitest/hooks/test.rb:137
  def _record_minitest_hooks_error(reporter, instance); end
end

# source://minitest-hooks-1.5.0/lib/minitest/hooks/test.rb:47
Minitest::Hooks::ClassMethods::NEW = T.let(T.unsafe(nil), Object)

# source://minitest-hooks-1.5.0/lib/minitest/hooks.rb:5
class Minitest::HooksSpec < ::Minitest::Spec
  include ::Minitest::Hooks
  extend ::Minitest::Hooks::ClassMethods
end
