# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `net-http` gem.
# Please instead update this file by running `bin/tapioca gem net-http`.

# source://net-http//net/http/backward.rb#7
Net::HTTP::ProxyMod = Net::HTTP::ProxyDelta

# :stopdoc:
#
# source://net-http//net/http.rb#382
Net::HTTP::VERSION = T.let(T.unsafe(nil), String)

# Response class for <tt>Already Reported (WebDAV)</tt> responses (status code 208).
#
# The <tt>Already Reported (WebDAV)</tt> response indicates that the server
# has received the request,
# and that the members of a DAV binding have already been enumerated
# in a preceding part of the (multi-status) response,
# and are not being included again.
# See {208 Already Reported (WebDAV)}[https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#208].
class Net::HTTPAlreadyReported < ::Net::HTTPSuccess; end

# source://net-http//net/http/responses.rb#227
Net::HTTPAlreadyReported::HAS_BODY = T.let(T.unsafe(nil), TrueClass)

# source://net-http//net/http/responses.rb#67
Net::HTTPClientError::EXCEPTION_TYPE = Net::HTTPClientException

# source://net-http//net/http/backward.rb#23
Net::HTTPClientErrorCode = Net::HTTPClientError

# Response class for <tt>Early Hints</tt> responses (status code 103).
#
# The <tt>Early Hints</tt> indicates that the server has received
# and is processing the request, and contains certain headers;
# the final response is not available yet.
#
# References:
#
# - {Mozilla}[https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/103].
# - {Wikipedia}[https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#103].
class Net::HTTPEarlyHints < ::Net::HTTPInformation; end

# source://net-http//net/http/responses.rb#138
Net::HTTPEarlyHints::HAS_BODY = T.let(T.unsafe(nil), FalseClass)

# source://net-http//net/http/backward.rb#24
Net::HTTPFatalErrorCode = Net::HTTPClientError

# source://net-http//net/http/responses.rb#23
Net::HTTPInformation::EXCEPTION_TYPE = Net::HTTPError

# source://net-http//net/http/backward.rb#19
Net::HTTPInformationCode = Net::HTTPInformation

# Response class for <tt>Loop Detected (WebDAV)</tt> responses (status code 508).
#
# The server detected an infinite loop while processing the request.
# See {508 Loop Detected (WebDAV)}[https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#508].
class Net::HTTPLoopDetected < ::Net::HTTPServerError; end

# source://net-http//net/http/responses.rb#626
Net::HTTPLoopDetected::HAS_BODY = T.let(T.unsafe(nil), TrueClass)

# Response class for <tt>Misdirected Request</tt> responses (status code 421).
#
# The request was directed at a server that is not able to produce a response.
# See {421 Misdirected Request}[https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#421].
class Net::HTTPMisdirectedRequest < ::Net::HTTPClientError; end

# source://net-http//net/http/responses.rb#476
Net::HTTPMisdirectedRequest::HAS_BODY = T.let(T.unsafe(nil), TrueClass)

# source://net-http//net/http/responses.rb#267
Net::HTTPMovedTemporarily = Net::HTTPFound

# source://net-http//net/http/responses.rb#248
Net::HTTPMultipleChoice = Net::HTTPMultipleChoices

# Response class for <tt>Not Extended</tt> responses (status code 510).
#
# Further extensions to the request are required for the server to fulfill it.
# See {510 Not Extended}[https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#510].
class Net::HTTPNotExtended < ::Net::HTTPServerError; end

# source://net-http//net/http/responses.rb#635
Net::HTTPNotExtended::HAS_BODY = T.let(T.unsafe(nil), TrueClass)

# Response class for <tt>Payload Too Large</tt> responses (status code 413).
#
# The request is larger than the server is willing or able to process.
# See {413 Payload Too Large}[https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#413].
class Net::HTTPPayloadTooLarge < ::Net::HTTPClientError; end

# source://net-http//net/http/responses.rb#427
Net::HTTPPayloadTooLarge::HAS_BODY = T.let(T.unsafe(nil), TrueClass)

# Response class for +Processing+ responses (status code 102).
#
# The +Processing+ response indicates that the server has received
# and is processing the request, but no response is available yet.
#
# References:
#
# - {Wikipedia}[https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#102].
class Net::HTTPProcessing < ::Net::HTTPInformation; end

# source://net-http//net/http/responses.rb#123
Net::HTTPProcessing::HAS_BODY = T.let(T.unsafe(nil), FalseClass)

# Response class for <tt>Range Not Satisfiable</tt> responses (status code 416).
#
# The request entity has a media type which the server or resource does not support.
# See {416 Range Not Satisfiable}[https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#416].
class Net::HTTPRangeNotSatisfiable < ::Net::HTTPClientError; end

# source://net-http//net/http/responses.rb#454
Net::HTTPRangeNotSatisfiable::HAS_BODY = T.let(T.unsafe(nil), TrueClass)

# source://net-http//net/http/responses.rb#53
Net::HTTPRedirection::EXCEPTION_TYPE = Net::HTTPRetriableError

# source://net-http//net/http/backward.rb#21
Net::HTTPRedirectionCode = Net::HTTPRedirection

# source://net-http//net/http/responses.rb#439
Net::HTTPRequestURITooLarge = Net::HTTPURITooLong

# Typo since 2001
#
# source://net-http//net/http/backward.rb#28
Net::HTTPResponceReceiver = Net::HTTPResponse

# source://net-http//net/http/backward.rb#26
Net::HTTPResponseReceiver = Net::HTTPResponse

# source://net-http//net/http/backward.rb#22
Net::HTTPRetriableCode = Net::HTTPRedirection

# source://net-http//net/http/responses.rb#81
Net::HTTPServerError::EXCEPTION_TYPE = Net::HTTPFatalError

# source://net-http//net/http/backward.rb#25
Net::HTTPServerErrorCode = Net::HTTPServerError

# source://net-http//net/http/backward.rb#17
Net::HTTPSession = Net::HTTP

# source://net-http//net/http/responses.rb#38
Net::HTTPSuccess::EXCEPTION_TYPE = Net::HTTPError

# source://net-http//net/http/backward.rb#20
Net::HTTPSuccessCode = Net::HTTPSuccess

# Response class for <tt>URI Too Long</tt> responses (status code 414).
#
# The URI provided was too long for the server to process.
# See {414 URI Too Long}[https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#414].
class Net::HTTPURITooLong < ::Net::HTTPClientError; end

# source://net-http//net/http/responses.rb#436
Net::HTTPURITooLong::HAS_BODY = T.let(T.unsafe(nil), TrueClass)

# source://net-http//net/http/responses.rb#9
Net::HTTPUnknownResponse::EXCEPTION_TYPE = Net::HTTPError

# Response class for <tt>Variant Also Negotiates</tt> responses (status code 506).
#
# Transparent content negotiation for the request results in a circular reference.
# See {506 Variant Also Negotiates}[https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#506].
class Net::HTTPVariantAlsoNegotiates < ::Net::HTTPServerError; end

# source://net-http//net/http/responses.rb#610
Net::HTTPVariantAlsoNegotiates::HAS_BODY = T.let(T.unsafe(nil), TrueClass)

# source://net-http//net/http/backward.rb#12
Net::NetPrivate::HTTPRequest = Net::HTTPRequest
